# -*- coding: utf-8 -*-
"""
Created on Wed Dec 22 02:15:49 2021

@author: LENOVO
"""

#! /usr/bin/env python
#  -*- coding: utf-8 -*-
#
# GUI module generated by PAGE version 6.2
#  in conjunction with Tcl version 8.6
#    Dec 17, 2021 08:58:02 AM CAT  platform: Windows NT


from tkinter import *

from tkinter import filedialog

from PIL import ImageTk
import PIL.Image

import sys
import PIL
from keras import models
import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns
sns.set(style="whitegrid")
import os
import glob as gb
import cv2
import tensorflow as tf
import keras

from tkinter import *
from PIL import Image, ImageTk


def getcode(n):
    code = {'buildings': 0, 'forest': 1, 'glacier': 2, 'mountain': 3, 'sea': 4, 'street': 5}
    for x, y in code.items():
        if n == y:
            return x


def get_result(model,path):
    c = models.load_model(model)
    x = "xxx"
    X_image = []
    image = cv2.imread(path)
    image_array = cv2.resize(image, (100, 100))
    X_image.append(list(image_array))
    X_test = []
    X_test.append(list(image_array))
    X_test = np.array(X_test)
    y_pred = c.predict(X_test)
    return str(getcode(np.argmax(y_pred)))


try:
    import Tkinter as tk
except ImportError:
    import tkinter as tk

try:
    import ttk

    py3 = False
except ImportError:
    import tkinter.ttk as ttk

    py3 = True





def vp_start_gui():
    '''Starting point when module is the main routine.'''
    global val, w, root
    root = tk.Tk()
    top = Toplevel1(root)
    root.mainloop()


w = None


def create_Toplevel1(rt, *args, **kwargs):
    '''Starting point when module is imported by another module.
       Correct form of call: 'create_Toplevel1(root, *args, **kwargs)' .'''
    global w, w_win, root
    # rt = root
    root = rt
    w = tk.Toplevel(root)
    top = Toplevel1(w)
    return (w, top)


def destroy_Toplevel1():
    global w
    w.destroy()
    w = None




class Toplevel1:
    def __init__(self, top=None):
        def openFile():
            filepath = filedialog.askopenfilename(initialdir="E:\3st\Semster_1\Projects\Selected\DataSet\Dataset\seg_pred - Copy\seg_pred")
            file = open(filepath, 'r')
            print(filepath)
            self.Label8.configure(text=get_result("D:\\university\\third year\\AI\\ObjectDetection5\\my_model.h5",filepath))
            self.varun_label.config(image = "")
            image = Image.open(filepath)
            resized_image= image.resize((500,220), Image.ANTIALIAS)
            photo = ImageTk.PhotoImage(resized_image)
            self.varun_label.configure(image=photo)
            self.varun_label.image=photo
            
        
        
        
        
        
        '''This class configures and populates the toplevel window.
           top is the toplevel containing window.'''
        _bgcolor = '#d9d9d9'  # X11 color: 'gray85'
        _fgcolor = '#000000'  # X11 color: 'black'
        _compcolor = '#d9d9d9'  # X11 color: 'gray85'
        _ana1color = '#d9d9d9'  # X11 color: 'gray85'
        _ana2color = '#ececec'  # Closest X11 color: 'gray92'

        top.geometry("600x706+463+34")
        top.minsize(120, 1)
        top.maxsize(1540, 845)
        top.resizable(1, 1)
        top.title("New Toplevel")
        top.configure(background="#d9d9d9")
        top.configure(highlightbackground="#d9d9d9")
        top.configure(highlightcolor="black")
        




        self.Frame1 = tk.Frame(top)
        self.Frame1.place(relx=0.017, rely=0.023, relheight=0.943, relwidth=0.975)
        self.Frame1.configure(relief='groove')
        self.Frame1.configure(borderwidth="2")
        self.Frame1.configure(relief="groove")
        self.Frame1.configure(background="#ff8080")
        self.Frame1.configure(highlightbackground="#d9d9d9")
        self.Frame1.configure(highlightcolor="black")

        self.Label1 = tk.Label(self.Frame1)
        self.Label1.place(relx=0.085, rely=0.036, height=127, width=454)
        self.Label1.configure(activebackground="#f9f9f9")
        self.Label1.configure(activeforeground="black")
        self.Label1.configure(background="#ff8080")
        self.Label1.configure(disabledforeground="#a3a3a3")
        self.Label1.configure(font="-family {Segoe UI Emoji} -size 24 -weight bold -slant italic")
        self.Label1.configure(foreground="#000000")
        self.Label1.configure(highlightbackground="#d9d9d9")
        self.Label1.configure(highlightcolor="black")
        self.Label1.configure(text='''Welcome To Our Object''')

        self.Label2 = tk.Label(self.Frame1)
        self.Label2.place(relx=0.0, rely=0.0, height=33, width=584)
        self.Label2.configure(activebackground="#f9f9f9")
        self.Label2.configure(activeforeground="black")
        self.Label2.configure(background="#808080")
        self.Label2.configure(disabledforeground="#a3a3a3")
        self.Label2.configure(foreground="#000000")
        self.Label2.configure(highlightbackground="#d9d9d9")
        self.Label2.configure(highlightcolor="black")

        self.Label3 = tk.Label(self.Frame1)
        self.Label3.place(relx=0.0, rely=0.047, height=644, width=24)
        self.Label3.configure(activebackground="#f9f9f9")
        self.Label3.configure(activeforeground="black")
        self.Label3.configure(background="#808080")
        self.Label3.configure(disabledforeground="#a3a3a3")
        self.Label3.configure(foreground="#000000")
        self.Label3.configure(highlightbackground="#d9d9d9")
        self.Label3.configure(highlightcolor="black")

        self.Label4 = tk.Label(self.Frame1)
        self.Label4.place(relx=0.957, rely=0.047, height=644, width=34)
        self.Label4.configure(activebackground="#f9f9f9")
        self.Label4.configure(activeforeground="black")
        self.Label4.configure(background="#808080")
        self.Label4.configure(disabledforeground="#a3a3a3")
        self.Label4.configure(foreground="#000000")
        self.Label4.configure(highlightbackground="#d9d9d9")
        self.Label4.configure(highlightcolor="black")

        self.Label5 = tk.Label(self.Frame1)
        self.Label5.place(relx=0.017, rely=0.965, height=32, width=554)
        self.Label5.configure(activebackground="#f9f9f9")
        self.Label5.configure(activeforeground="black")
        self.Label5.configure(background="#808080")
        self.Label5.configure(disabledforeground="#a3a3a3")
        self.Label5.configure(foreground="#000000")
        self.Label5.configure(highlightbackground="#d9d9d9")
        self.Label5.configure(highlightcolor="black")

        self.Label6 = tk.Label(self.Frame1)
        self.Label6.place(relx=0.205, rely=0.161, height=79, width=303)
        self.Label6.configure(activebackground="#f9f9f9")
        self.Label6.configure(activeforeground="black")
        self.Label6.configure(background="#ff8080")
        self.Label6.configure(disabledforeground="#a3a3a3")
        self.Label6.configure(font="-family {Segoe UI Emoji} -size 24 -weight bold -slant italic")
        self.Label6.configure(foreground="#000000")
        self.Label6.configure(highlightbackground="#d9d9d9")
        self.Label6.configure(highlightcolor="black")
        self.Label6.configure(text='''Detection Project''')

        self.Button1 = tk.Button(self.Frame1)
        self.Button1.place(relx=0.205, rely=0.303, height=74, width=317)
        self.Button1.configure(activebackground="#ececec")
        self.Button1.configure(activeforeground="#000000")
        self.Button1.configure(background="#808080")
        self.Button1.configure(disabledforeground="#a3a3a3")
        self.Button1.configure(font="-family {Segoe UI Emoji} -size 24 -weight bold")
        self.Button1.configure(foreground="#000000")
        self.Button1.configure(highlightbackground="#d9d9d9")
        self.Button1.configure(highlightcolor="black")
        self.Button1.configure(pady="0")
        self.Button1.configure(text='''Choose Image''', command=openFile)

        self.Label7 = tk.Label(self.Frame1)
        self.Label7.place(relx=0.051, rely=0.465, height=60, width=184)
        self.Label7.configure(activebackground="#f9f9f9")
        self.Label7.configure(activeforeground="black")
        self.Label7.configure(background="#ff8080")
        self.Label7.configure(disabledforeground="#a3a3a3")
        self.Label7.configure(font="-family {Segoe UI Emoji} -size 14 -weight bold")
        self.Label7.configure(foreground="#000000")
        self.Label7.configure(highlightbackground="#d9d9d9")
        self.Label7.configure(highlightcolor="black")
        self.Label7.configure(text='''Object Name is :''')

        self.Label8 = tk.Label(self.Frame1)
        self.Label8.place(relx=0.068, rely=0.556, height=24, width=144)
        self.Label8.configure(activebackground="#f9f9f9")
        self.Label8.configure(activeforeground="black")
        self.Label8.configure(background="#d9d9d9")
        self.Label8.configure(disabledforeground="#a3a3a3")
        self.Label8.configure(foreground="#000000")
        self.Label8.configure(highlightbackground="#d9d9d9")
        self.Label8.configure(highlightcolor="black")
        self.Label8.configure(font=("Courier", 18))
        
        ########################
        self.varun_label = tk.Label(self.Frame1)
        self.varun_label.place(relx=0.068, rely=0.616)
        ########################
        
        self.Frame1.mainloop()
if __name__ == '__main__':
    vp_start_gui()


